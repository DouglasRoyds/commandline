openssl genpkey -algorithm ed25519 -out ed25519.pem
openssl genpkey -algorithm rsa -out rsa.pem        Generate a private key
                                                      -aes256     Encrypt the private key

openssl ec  -noout -text -in ed25519.pem
openssl rsa -noout -text -in rsa.pem               Print the private key
openssl ec  -pubout -in ed25519.pem
openssl rsa -pubout -in rsa.pem                    Print the public key
                                                      -out public.pem

openssl req -new -x509 -days 365 -key ca.key -out ca.cert.pem
                                                   Create a self-signed CA certificate
                                                      -config openssl.cnf
openssl x509 -noout -text -in ca.cert.pem          Print a certificate

openssl req -new -key ca.key -out client.csr       Create a certificate signing request
openssl req -noout -text -in client.csr            Print a certificate signing request

openssl x509 -req -days 365 -in client.csr -CA ca.cert.pem -CAkey ca.key -CAcreateserial -out server.crt
openssl x509 -noout -text -in root.pem             Create a server certificate, and print it

openssl dgst -sha256 -sign   ed25519.pem -out       data.txt.signature data.txt      Generate a signature file
openssl dgst -sha256 -verify public.pem  -signature data.txt.signature data.txt      Verify against a signature

openssl s_client -tls1_3 -connect hostname:443     Does the host support TLS 1.3?
                                                      -tls1_2
                                                      -tls1_1
                                                      -tls1
